:where(.root) {
    /* Default styles. Customize them by passing a className to the component. */
    --option-size: 24px;
    --border-color: #bdbdbd;
    --border-color-hover: #212121;
    --border-color-selected: #757575;
    --border-color-error: #ff0000;
}

.root {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;

    &.error .option {
        border-color: #ef4444;
    }
}

.option {
    width: 2rem;
    height: 2rem;
    border: 2px solid #e5e7eb;
    border-radius: 9999px;
    cursor: pointer;
    transition: all 0.15s ease-in-out;

    &:hover:not(.disabled) {
        transform: scale(1.1);
    }

    &:focus {
        outline: none;
        box-shadow: 0 0 0 2px #93c5fd;
    }

    &.selected {
        border-color: #2563eb;
    }

    &.disabled {
        opacity: 0.5;
        cursor: not-allowed;
    }
}

.colorBox {
    width: 100%;
    height: 100%;
    border-radius: 50%;
}

.option:hover .colorBox,
.option.selected .colorBox {
    border: 1px solid var(--border-color);
}

.root.hasError .option {
    border-color: var(--border-color-error);
}

.crossedOut {
    position: relative;
    overflow: hidden;
}

.crossedOut::after {
    content: '';
    position: absolute;
    height: 1px;
    transform: rotate(-45deg);
    inset: -50%;
    margin: auto;
    border-top: 1px solid var(--border-color);
}

.crossedOut:hover::after {
    border-color: var(--border-color-hover);
}

.crossedOut.selected::after {
    border-color: var(--border-color-selected);
}
